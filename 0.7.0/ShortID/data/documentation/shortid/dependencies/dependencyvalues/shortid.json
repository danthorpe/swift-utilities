{"metadata":{"title":"shortID","extendedModule":"Dependencies","externalID":"s:12Dependencies16DependencyValuesV7ShortIDE05shortE0AD0D11IDGeneratorVvp","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"shortID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7ShortID0A11IDGeneratorV","kind":"typeIdentifier","text":"ShortIDGenerator"}],"role":"symbol","roleHeading":"Instance Property","symbolKind":"property","modules":[{"name":"ShortID","relatedModules":["Dependencies"]}]},"abstract":[{"type":"text","text":"Access a generator to create new "},{"type":"reference","identifier":"doc:\/\/ShortID\/documentation\/ShortID\/ShortID","isActive":true},{"type":"text","text":" values"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/shortid\/dependencies\/dependencyvalues\/shortid"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shortID"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/ShortID\/documentation\/ShortID\/ShortIDGenerator","text":"ShortIDGenerator","kind":"typeIdentifier","preciseIdentifier":"s:7ShortID0A11IDGeneratorV"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"Like ","type":"text"},{"code":"UUID","type":"codeVoice"},{"type":"text","text":", "},{"identifier":"doc:\/\/ShortID\/documentation\/ShortID\/ShortID","isActive":true,"type":"reference"},{"text":" is an “uncontrolled dependency”, we cannot","type":"text"},{"type":"text","text":" "},{"type":"text","text":"know what it’s value will be because it is random. Therefore, to"},{"text":" ","type":"text"},{"type":"text","text":"have controlled tests, we need to be able to control the generation"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"identifier":"doc:\/\/ShortID\/documentation\/ShortID\/ShortID","isActive":true,"type":"reference"},{"text":" values.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"To this end, do not create use ","type":"text"},{"type":"codeVoice","code":"ShortID()"},{"text":" directly, in the same way","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that we should not use "},{"code":"UUID()","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Date()"},{"text":" directly. Instead use","type":"text"},{"type":"text","text":" "},{"type":"text","text":"dependency injection, or management, in particular swift-dependencies."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"See: https:\/\/github.com\/pointfreeco\/swift-dependencies"}],"type":"paragraph"},{"inlineContent":[{"text":"Example:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct Message: Equatable, Hashable, Identifiable {","  let id: String","  let message: String","","  init(message: String) {","    @Dependency(\\.shortID) var shortID","    self.init(","      id: shortID().description,","      message: message","    )","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, we provide an overload of the "},{"code":"Message.init","type":"codeVoice"},{"text":" where the identifier is","type":"text"},{"text":" ","type":"text"},{"text":"determined using a ShortID. When this code is run in an application, each message","type":"text"},{"type":"text","text":" "},{"type":"text","text":"will get a locally-unique random identifier. However, in tests, each identifier will be"},{"text":" ","type":"text"},{"text":"a locally-unique yet deterministic incrementing identifier.","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ShortID\/documentation\/ShortID\/Dependencies\/DependencyValues\/shortID"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ShortID\/documentation\/ShortID","doc:\/\/ShortID\/documentation\/ShortID\/Dependencies","doc:\/\/ShortID\/documentation\/ShortID\/Dependencies\/DependencyValues"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://ShortID/documentation/ShortID/ShortIDGenerator":{"url":"\/documentation\/shortid\/shortidgenerator","title":"ShortIDGenerator","type":"topic","identifier":"doc:\/\/ShortID\/documentation\/ShortID\/ShortIDGenerator","role":"symbol","kind":"symbol","abstract":[{"text":"A dependency which generates a ","type":"text"},{"code":"ShortID","type":"codeVoice"}],"navigatorTitle":[{"kind":"identifier","text":"ShortIDGenerator"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ShortIDGenerator"}]},"doc://ShortID/documentation/ShortID/Dependencies":{"abstract":[],"type":"topic","url":"\/documentation\/shortid\/dependencies","role":"collection","identifier":"doc:\/\/ShortID\/documentation\/ShortID\/Dependencies","title":"Dependencies","kind":"symbol"},"doc://ShortID/documentation/ShortID":{"kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/shortid","title":"ShortID","identifier":"doc:\/\/ShortID\/documentation\/ShortID","abstract":[]},"doc://ShortID/documentation/ShortID/Dependencies/DependencyValues/shortID":{"role":"symbol","url":"\/documentation\/shortid\/dependencies\/dependencyvalues\/shortid","type":"topic","title":"shortID","abstract":[{"text":"Access a generator to create new ","type":"text"},{"type":"reference","identifier":"doc:\/\/ShortID\/documentation\/ShortID\/ShortID","isActive":true},{"text":" values","type":"text"}],"identifier":"doc:\/\/ShortID\/documentation\/ShortID\/Dependencies\/DependencyValues\/shortID","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"shortID","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7ShortID0A11IDGeneratorV","kind":"typeIdentifier","text":"ShortIDGenerator"}],"kind":"symbol"},"doc://ShortID/documentation/ShortID/Dependencies/DependencyValues":{"title":"DependencyValues","navigatorTitle":[{"text":"DependencyValues","kind":"identifier"}],"kind":"symbol","abstract":[],"role":"symbol","type":"topic","url":"\/documentation\/shortid\/dependencies\/dependencyvalues","identifier":"doc:\/\/ShortID\/documentation\/ShortID\/Dependencies\/DependencyValues","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues"}]},"doc://ShortID/documentation/ShortID/ShortID":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ShortID"}],"navigatorTitle":[{"text":"ShortID","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ShortID"},{"type":"text","text":" value is like a "},{"code":"UUID","type":"codeVoice"},{"text":" except that it has fewer characters,","type":"text"},{"text":" ","type":"text"},{"text":"and is locally-unique instead of globally unique. This is useful when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you wish to have more-or-less unique values which are much less verbose."}],"identifier":"doc:\/\/ShortID\/documentation\/ShortID\/ShortID","url":"\/documentation\/shortid\/shortid","role":"symbol","title":"ShortID","kind":"symbol"}}}