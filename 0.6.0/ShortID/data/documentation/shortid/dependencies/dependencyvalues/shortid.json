{"identifier":{"url":"doc:\/\/ShortID\/documentation\/ShortID\/Dependencies\/DependencyValues\/shortID","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"shortID","extendedModule":"Dependencies","roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"shortID","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7ShortID0A11IDGeneratorV","text":"ShortIDGenerator"}],"externalID":"s:12Dependencies16DependencyValuesV7ShortIDE05shortE0AD0D11IDGeneratorVvp","role":"symbol","modules":[{"relatedModules":["Dependencies"],"name":"ShortID"}],"symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/ShortID\/documentation\/ShortID","doc:\/\/ShortID\/documentation\/ShortID\/Dependencies","doc:\/\/ShortID\/documentation\/ShortID\/Dependencies\/DependencyValues"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shortID","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ShortIDGenerator","identifier":"doc:\/\/ShortID\/documentation\/ShortID\/ShortIDGenerator","kind":"typeIdentifier","preciseIdentifier":"s:7ShortID0A11IDGeneratorV"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Like ","type":"text"},{"code":"UUID","type":"codeVoice"},{"type":"text","text":", "},{"type":"reference","identifier":"doc:\/\/ShortID\/documentation\/ShortID\/ShortID","isActive":true},{"type":"text","text":" is an “uncontrolled dependency”, we cannot"},{"text":" ","type":"text"},{"type":"text","text":"know what it’s value will be because it is random. Therefore, to"},{"type":"text","text":" "},{"text":"have controlled tests, we need to be able to control the generation","type":"text"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"identifier":"doc:\/\/ShortID\/documentation\/ShortID\/ShortID","type":"reference","isActive":true},{"type":"text","text":" values."}]},{"inlineContent":[{"text":"To this end, do not create use ","type":"text"},{"type":"codeVoice","code":"ShortID()"},{"type":"text","text":" directly, in the same way"},{"type":"text","text":" "},{"type":"text","text":"that we should not use "},{"type":"codeVoice","code":"UUID()"},{"text":" or ","type":"text"},{"code":"Date()","type":"codeVoice"},{"type":"text","text":" directly. Instead use"},{"text":" ","type":"text"},{"type":"text","text":"dependency injection, or management, in particular swift-dependencies."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"See: https:\/\/github.com\/pointfreeco\/swift-dependencies"}],"type":"paragraph"},{"inlineContent":[{"text":"Example:","type":"text"}],"type":"paragraph"},{"code":["struct Message: Equatable, Hashable, Identifiable {","  let id: String","  let message: String","","  init(message: String) {","    @Dependency(\\.shortID) var shortID","    self.init(","      id: shortID().description,","      message: message","    )","  }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, we provide an overload of the "},{"code":"Message.init","type":"codeVoice"},{"type":"text","text":" where the identifier is"},{"type":"text","text":" "},{"type":"text","text":"determined using a ShortID. When this code is run in an application, each message"},{"text":" ","type":"text"},{"text":"will get a locally-unique random identifier. However, in tests, each identifier will be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a locally-unique yet deterministic incrementing identifier."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/shortid\/dependencies\/dependencyvalues\/shortid"]}],"abstract":[{"type":"text","text":"Access a generator to create new "},{"identifier":"doc:\/\/ShortID\/documentation\/ShortID\/ShortID","type":"reference","isActive":true},{"text":" values","type":"text"}],"references":{"doc://ShortID/documentation/ShortID/ShortID":{"title":"ShortID","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ShortID","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ShortID"}],"identifier":"doc:\/\/ShortID\/documentation\/ShortID\/ShortID","url":"\/documentation\/shortid\/shortid","abstract":[{"text":"A ","type":"text"},{"code":"ShortID","type":"codeVoice"},{"type":"text","text":" value is like a "},{"type":"codeVoice","code":"UUID"},{"text":" except that it has fewer characters,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and is locally-unique instead of globally unique. This is useful when"},{"type":"text","text":" "},{"type":"text","text":"you wish to have more-or-less unique values which are much less verbose."}],"kind":"symbol"},"doc://ShortID/documentation/ShortID/Dependencies/DependencyValues/shortID":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ShortID\/documentation\/ShortID\/Dependencies\/DependencyValues\/shortID","role":"symbol","abstract":[{"type":"text","text":"Access a generator to create new "},{"type":"reference","identifier":"doc:\/\/ShortID\/documentation\/ShortID\/ShortID","isActive":true},{"type":"text","text":" values"}],"url":"\/documentation\/shortid\/dependencies\/dependencyvalues\/shortid","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shortID"},{"kind":"text","text":": "},{"text":"ShortIDGenerator","kind":"typeIdentifier","preciseIdentifier":"s:7ShortID0A11IDGeneratorV"}],"title":"shortID"},"doc://ShortID/documentation/ShortID":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ShortID\/documentation\/ShortID","url":"\/documentation\/shortid","title":"ShortID","abstract":[],"role":"collection"},"doc://ShortID/documentation/ShortID/ShortIDGenerator":{"role":"symbol","navigatorTitle":[{"text":"ShortIDGenerator","kind":"identifier"}],"title":"ShortIDGenerator","abstract":[{"type":"text","text":"A dependency which generates a "},{"code":"ShortID","type":"codeVoice"}],"identifier":"doc:\/\/ShortID\/documentation\/ShortID\/ShortIDGenerator","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ShortIDGenerator","kind":"identifier"}],"url":"\/documentation\/shortid\/shortidgenerator","type":"topic","kind":"symbol"},"doc://ShortID/documentation/ShortID/Dependencies/DependencyValues":{"title":"DependencyValues","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DependencyValues"}],"url":"\/documentation\/shortid\/dependencies\/dependencyvalues","abstract":[],"role":"symbol","identifier":"doc:\/\/ShortID\/documentation\/ShortID\/Dependencies\/DependencyValues","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:12Dependencies16DependencyValuesV","text":"DependencyValues","kind":"identifier"}],"type":"topic"},"doc://ShortID/documentation/ShortID/Dependencies":{"title":"Dependencies","kind":"symbol","url":"\/documentation\/shortid\/dependencies","abstract":[],"role":"collection","identifier":"doc:\/\/ShortID\/documentation\/ShortID\/Dependencies","type":"topic"}}}